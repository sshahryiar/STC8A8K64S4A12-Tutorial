C51 COMPILER V9.60.0.0   MAIN                                                              09/28/2020 21:16:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\My_Libraries\Device Header File
                    -s) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC8xxx.h"
   2          #include "BSP.h"
   3          
   4          
   5          #define DAT_pin_HIGH                    P41_high
   6          #define DAT_pin_LOW                     P41_low
   7          
   8          #define CLK_pin_HIGH                    P42_high
   9          #define CLK_pin_LOW                     P42_low
  10          
  11          #define refresh_time_in_us              315
  12          #define max_tmr_cnt                     0xFFFF
  13          #define tmr_val                         (max_tmr_cnt - refresh_time_in_us)
  14          
  15          
  16          
  17          const unsigned char pos[0x08] =
  18          {
  19              0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
  20          };
  21          
  22          
  23          const unsigned char num[0x0A] =
  24          {
  25              0x03, 0x9F, 0x25, 0x0D, 0x99, 0x49, 0x41, 0x1F, 0x01, 0x09
  26          };
  27          
  28          
  29          unsigned char i = 0x00;
  30          
  31          signed int value_1 = 0;
  32          signed int value_2 = 0;
  33          
  34          
  35          void setup(void);
  36          void Write_74HC164(unsigned char val, unsigned char seg);
  37          
  38          
  39          void ADC_ISR(void)          
  40          interrupt 5
  41          {
  42   1        value_1 = ((ADC_RES << 8) | ADC_RESL);
  43   1        value_2 = ((value_1 * 5000.0) / 4096.0);
  44   1        clear_ADC_flag;
  45   1      }
  46          
  47          
  48          void TMR_2_ISR(void)        
  49          interrupt 12
  50          {
  51   1          switch(i)
  52   1          {
  53   2              case 0:
  54   2              {
C51 COMPILER V9.60.0.0   MAIN                                                              09/28/2020 21:16:58 PAGE 2   

  55   3                  Write_74HC164(num[(value_1 / 1000)], pos[3]);
  56   3                  break;
  57   3              }
  58   2      
  59   2              case 1:
  60   2              {
  61   3                  Write_74HC164((num[((value_1 % 1000) / 100)]), pos[2]);
  62   3                  break;
  63   3              }
  64   2      
  65   2              case 2:
  66   2              {
  67   3                  Write_74HC164(num[((value_1 % 100) / 10)], pos[1]);
  68   3                  break;
  69   3              }
  70   2      
  71   2              case 3:
  72   2              {
  73   3                  Write_74HC164(num[(value_1 % 10)], pos[0]);
  74   3                  break;
  75   3              }
  76   2      
  77   2              case 4:
  78   2              {
  79   3                  Write_74HC164(num[(value_2 / 1000)] & 0xFE, pos[7]);
  80   3                  break;
  81   3              }
  82   2      
  83   2              case 5:
  84   2              {
  85   3                  Write_74HC164((num[((value_2 % 1000) / 100)]), pos[6]);
  86   3                  break;
  87   3              }
  88   2      
  89   2              case 6:
  90   2              {
  91   3                  Write_74HC164(num[((value_2 % 100) / 10)], pos[5]);
  92   3                  break;
  93   3              }
  94   2      
  95   2              case 7:
  96   2              {
  97   3                  Write_74HC164(num[(value_2 % 10)], pos[4]);
  98   3                  break;
  99   3              }
 100   2          }
 101   1      
 102   1          i++;
 103   1      
 104   1          if(i >= 8)
 105   1          {
 106   2              i = 0;
 107   2          }
 108   1      
 109   1          clear_TMR_2_overflow_flag;
 110   1      }  
 111          
 112          
 113          void main(void)
 114          {  
 115   1        setup();
 116   1        
C51 COMPILER V9.60.0.0   MAIN                                                              09/28/2020 21:16:58 PAGE 3   

 117   1        while(1)
 118   1        {
 119   2          ADC_set_channel(CH15);
 120   2          delay_ms(10);
 121   2          ADC_start_conversion;
 122   2          delay_ms(400);
 123   2        };
 124   1      }
 125          
 126          
 127          void setup(void)
 128          {
 129   1        CLK_set_sys_clk(IRC_24M, 2, MCLK_SYSCLK_no_output, MCLK_out_P54);
 130   1        
 131   1        P41_push_pull_mode;
 132   1        P42_push_pull_mode;
 133   1        
 134   1        ADC_enable;
 135   1        ADC_result_format_right_aligned;
 136   1        ADC_set_conversion_speed(ADC_conv_128_CLKs);
 137   1        _enable_ADC_interrupt;
 138   1        
 139   1        TMR2_setup(TMR2_sysclk, TMR2_clk_prescalar_12T);
 140   1        TMR2_load_counter_16(tmr_val);
 141   1        TMR2_start;
 142   1        _enable_TMR_2_interrupt;
 143   1        _enable_global_interrupt;
 144   1      }
 145          
 146          
 147          
 148          void Write_74HC164(unsigned char val, unsigned char seg)
 149          {
 150   1          unsigned char s = 0x10;
 151   1          unsigned int temp = 0x0000;
 152   1      
 153   1          temp = (unsigned int)seg;
 154   1          temp <<= 8;
 155   1          temp |= (unsigned int)val;
 156   1      
 157   1          while(s > 0)
 158   1          {
 159   2              if((temp & 0x0001) != 0x0000)
 160   2              {
 161   3                  DAT_pin_HIGH;
 162   3              }
 163   2              else
 164   2              {
 165   3                  DAT_pin_LOW;
 166   3              }
 167   2      
 168   2              CLK_pin_HIGH;
 169   2              
 170   2              temp >>= 1;
 171   2              s--;
 172   2              
 173   2              CLK_pin_LOW;
 174   2          }
 175   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   MAIN                                                              09/28/2020 21:16:58 PAGE 4   

   CODE SIZE        =   2522    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      64
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
