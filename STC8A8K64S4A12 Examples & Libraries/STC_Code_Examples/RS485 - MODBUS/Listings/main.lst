C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 03:31:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\My_Libraries\Device Heade
                    -r Files;.\My_Libraries\LCD) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC8xxx.h"
   2          #include "BSP.h"
   3          #include "LCD.c"
   4          #include "lcd_print.c"
   5          
   6          
   7          #define DIR_RX                                  P12_low
   8          #define DIR_TX                                  P12_high
   9          
  10          #define TX_buffer_length                        8
  11          #define RX_buffer_length                        10
  12          
  13          
  14          unsigned char cnt = 0x00;
  15          unsigned char RX_buffer[RX_buffer_length];
  16          
  17          static const unsigned char TX_buffer[TX_buffer_length] = {0x01, 0x03, 0x00, 0x00, 0x00, 0x02, 0xC4, 0x0B};
  18          
  19          
  20          void setup(void);
  21          void flush_RX_buffer(void);
  22          void send_read_command(void);
  23          unsigned int make_word(unsigned char HB, unsigned char LB);
  24          void get_HB_LB(unsigned int value, unsigned char *HB, unsigned char *LB);
  25          unsigned int MODBUS_RTU_CRC16(unsigned char *data_input, unsigned char data_length);
  26          
  27          
  28          void UART_2_ISR(void)       
  29          interrupt 8
  30          {
  31   1        if(check_UART_2_RX_flag)
  32   1        {
  33   2          RX_buffer[cnt++] = UART2_read_buffer();
  34   2        }
  35   1      }
  36          
  37          
  38          void main(void)
  39          {
  40   1        unsigned int value = 0x0000;
  41   1        unsigned int CRC_check_1 = 0x0000;
  42   1        unsigned int CRC_check_2 = 0x0000;
  43   1      
  44   1        setup();
  45   1      
  46   1        LCD_goto(0, 0);
  47   1        LCD_putstr("R.H / %:");
  48   1        LCD_goto(0, 1);
  49   1        LCD_putstr("Temp/ C:");
  50   1        print_symbol(5, 1, 0);
  51   1      
  52   1        while(1)
  53   1        {
  54   2            send_read_command();
C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 03:31:58 PAGE 2   

  55   2      
  56   2            CRC_check_1 = MODBUS_RTU_CRC16(RX_buffer, 7);
  57   2            CRC_check_2 = make_word(RX_buffer[8], RX_buffer[7]);
  58   2      
  59   2            if(CRC_check_1 == CRC_check_2)
  60   2            {
  61   3               value = make_word(RX_buffer[5], RX_buffer[6]);
  62   3               print_F(11, 0, (value / 10.0), 1);
  63   3      
  64   3               value = make_word(RX_buffer[3], RX_buffer[4]);
  65   3               print_F(11, 1, (value / 10.0), 1);
  66   3            }
  67   2      
  68   2            else
  69   2            {
  70   3              LCD_goto(12, 0);
  71   3              LCD_putstr("--.-");
  72   3              LCD_goto(12, 1);
  73   3              LCD_putstr("--.-");
  74   3            }
  75   2      
  76   2            P55_toggle;
  77   2            delay_ms(1000);
  78   2        };
  79   1      }
  80          
  81          
  82          void setup(void)
  83          {
  84   1        CLK_set_sys_clk(IRC_24M, 2, MCLK_SYSCLK_no_output, MCLK_out_P54);
  85   1        
  86   1        P12_push_pull_mode;
  87   1        P55_open_drain_mode;
  88   1        
  89   1        LCD_init();
  90   1        LCD_clear_home();
  91   1        load_custom_symbol();
  92   1        
  93   1        UART2_pin_option(0x00);
  94   1        
  95   1        UART2_init(9600, \
  96   1                   UART2_timer_1T, \
  97   1                   12000000);
  98   1        
  99   1        _enable_UART_2_interrupt;
 100   1        _enable_global_interrupt;
 101   1      }
 102          
 103          
 104          void flush_RX_buffer(void)
 105          {
 106   1        signed char i = (RX_buffer_length - 1);
 107   1      
 108   1        while(i > -1)
 109   1        {
 110   2          RX_buffer[i] = 0x00;
 111   2          i--;
 112   2        };
 113   1      }
 114          
 115          
 116          void send_read_command(void)
C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 03:31:58 PAGE 3   

 117          {
 118   1        unsigned char i = 0x00;
 119   1      
 120   1        flush_RX_buffer();
 121   1      
 122   1        DIR_TX;
 123   1      
 124   1        for(i = 0; i < TX_buffer_length; i++)
 125   1        {
 126   2          UART2_write_buffer(TX_buffer[i]);
 127   2        }
 128   1      
 129   1        cnt = 0;
 130   1        DIR_RX;
 131   1      
 132   1        delay_ms(600);
 133   1      }
 134          
 135          
 136          unsigned int make_word(unsigned char HB, unsigned char LB)
 137          {
 138   1        unsigned int tmp = 0;
 139   1      
 140   1        tmp = HB;
 141   1        tmp <<= 8;
 142   1        tmp |= LB;
 143   1      
 144   1        return tmp;
 145   1      }
 146          
 147          
 148          void get_HB_LB(unsigned int value, unsigned char *HB, unsigned char *LB)
 149          {
 150   1        *LB = (value & 0x00FF);
 151   1        *HB = ((value & 0xFF00) >> 8);
 152   1      }
 153          
 154          
 155          unsigned int MODBUS_RTU_CRC16(unsigned char *data_input, unsigned char data_length)
 156          {
 157   1        static const unsigned int CRC_table[256] =
 158   1        {
 159   1           0x0000, 0xC0C1, 0xC181, 0x0140, 0xC301, 0x03C0, 0x0280, 0xC241,
 160   1           0xC601, 0x06C0, 0x0780, 0xC741, 0x0500, 0xC5C1, 0xC481, 0x0440,
 161   1           0xCC01, 0x0CC0, 0x0D80, 0xCD41, 0x0F00, 0xCFC1, 0xCE81, 0x0E40,
 162   1           0x0A00, 0xCAC1, 0xCB81, 0x0B40, 0xC901, 0x09C0, 0x0880, 0xC841,
 163   1           0xD801, 0x18C0, 0x1980, 0xD941, 0x1B00, 0xDBC1, 0xDA81, 0x1A40,
 164   1           0x1E00, 0xDEC1, 0xDF81, 0x1F40, 0xDD01, 0x1DC0, 0x1C80, 0xDC41,
 165   1           0x1400, 0xD4C1, 0xD581, 0x1540, 0xD701, 0x17C0, 0x1680, 0xD641,
 166   1           0xD201, 0x12C0, 0x1380, 0xD341, 0x1100, 0xD1C1, 0xD081, 0x1040,
 167   1           0xF001, 0x30C0, 0x3180, 0xF141, 0x3300, 0xF3C1, 0xF281, 0x3240,
 168   1           0x3600, 0xF6C1, 0xF781, 0x3740, 0xF501, 0x35C0, 0x3480, 0xF441,
 169   1           0x3C00, 0xFCC1, 0xFD81, 0x3D40, 0xFF01, 0x3FC0, 0x3E80, 0xFE41,
 170   1           0xFA01, 0x3AC0, 0x3B80, 0xFB41, 0x3900, 0xF9C1, 0xF881, 0x3840,
 171   1           0x2800, 0xE8C1, 0xE981, 0x2940, 0xEB01, 0x2BC0, 0x2A80, 0xEA41,
 172   1           0xEE01, 0x2EC0, 0x2F80, 0xEF41, 0x2D00, 0xEDC1, 0xEC81, 0x2C40,
 173   1           0xE401, 0x24C0, 0x2580, 0xE541, 0x2700, 0xE7C1, 0xE681, 0x2640,
 174   1           0x2200, 0xE2C1, 0xE381, 0x2340, 0xE101, 0x21C0, 0x2080, 0xE041,
 175   1           0xA001, 0x60C0, 0x6180, 0xA141, 0x6300, 0xA3C1, 0xA281, 0x6240,
 176   1           0x6600, 0xA6C1, 0xA781, 0x6740, 0xA501, 0x65C0, 0x6480, 0xA441,
 177   1           0x6C00, 0xACC1, 0xAD81, 0x6D40, 0xAF01, 0x6FC0, 0x6E80, 0xAE41,
 178   1           0xAA01, 0x6AC0, 0x6B80, 0xAB41, 0x6900, 0xA9C1, 0xA881, 0x6840,
C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 03:31:58 PAGE 4   

 179   1           0x7800, 0xB8C1, 0xB981, 0x7940, 0xBB01, 0x7BC0, 0x7A80, 0xBA41,
 180   1           0xBE01, 0x7EC0, 0x7F80, 0xBF41, 0x7D00, 0xBDC1, 0xBC81, 0x7C40,
 181   1           0xB401, 0x74C0, 0x7580, 0xB541, 0x7700, 0xB7C1, 0xB681, 0x7640,
 182   1           0x7200, 0xB2C1, 0xB381, 0x7340, 0xB101, 0x71C0, 0x7080, 0xB041,
 183   1           0x5000, 0x90C1, 0x9181, 0x5140, 0x9301, 0x53C0, 0x5280, 0x9241,
 184   1           0x9601, 0x56C0, 0x5780, 0x9741, 0x5500, 0x95C1, 0x9481, 0x5440,
 185   1           0x9C01, 0x5CC0, 0x5D80, 0x9D41, 0x5F00, 0x9FC1, 0x9E81, 0x5E40,
 186   1           0x5A00, 0x9AC1, 0x9B81, 0x5B40, 0x9901, 0x59C0, 0x5880, 0x9841,
 187   1           0x8801, 0x48C0, 0x4980, 0x8941, 0x4B00, 0x8BC1, 0x8A81, 0x4A40,
 188   1           0x4E00, 0x8EC1, 0x8F81, 0x4F40, 0x8D01, 0x4DC0, 0x4C80, 0x8C41,
 189   1           0x4400, 0x84C1, 0x8581, 0x4540, 0x8701, 0x47C0, 0x4680, 0x8641,
 190   1           0x8201, 0x42C0, 0x4380, 0x8341, 0x4100, 0x81C1, 0x8081, 0x4040
 191   1         };
 192   1      
 193   1        unsigned char temp = 0;
 194   1        unsigned int CRC_word = 0xFFFF;
 195   1      
 196   1        while(data_length--)
 197   1        {
 198   2            temp = *data_input++ ^ CRC_word;
 199   2            CRC_word >>= 8;
 200   2            CRC_word ^= CRC_table[temp];
 201   2        }
 202   1      
 203   1        return CRC_word;
 204   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5327    ----
   CONSTANT SIZE    =     48    ----
   XDATA SIZE       =    531     142
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
